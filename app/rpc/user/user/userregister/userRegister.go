// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package userregister

import (
	"context"
	user2 "store/app/rpc/user/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RegisterReq = user2.RegisterReq
	RegisterRes = user2.RegisterRes
	Response    = user2.Response

	UserRegister interface {
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error)
	}

	defaultUserRegister struct {
		cli zrpc.Client
	}
)

func NewUserRegister(cli zrpc.Client) UserRegister {
	return &defaultUserRegister{
		cli: cli,
	}
}

func (m *defaultUserRegister) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error) {
	client := user2.NewUserRegisterClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}
