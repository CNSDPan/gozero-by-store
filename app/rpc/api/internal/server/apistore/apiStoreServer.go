// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: api.proto

package server

import (
	"context"

	"store/app/rpc/api/internal/logic/apistore"
	"store/app/rpc/api/internal/svc"
	"store/app/rpc/api/pb/api"
)

type ApiStoreServer struct {
	svcCtx *svc.ServiceContext
	api.UnimplementedApiStoreServer
}

func NewApiStoreServer(svcCtx *svc.ServiceContext) *ApiStoreServer {
	return &ApiStoreServer{
		svcCtx: svcCtx,
	}
}

func (s *ApiStoreServer) List(ctx context.Context, in *api.StoreListReq) (*api.StoreListRes, error) {
	l := apistorelogic.NewListLogic(ctx, s.svcCtx)
	return l.List(in)
}

func (s *ApiStoreServer) Info(ctx context.Context, in *api.StoreInfoReq) (*api.StoreInfoRes, error) {
	l := apistorelogic.NewInfoLogic(ctx, s.svcCtx)
	return l.Info(in)
}

func (s *ApiStoreServer) MemberUserList(ctx context.Context, in *api.MemberUsersItemReq) (*api.MemberUsersItemRes, error) {
	l := apistorelogic.NewMemberUserListLogic(ctx, s.svcCtx)
	return l.MemberUserList(in)
}

func (s *ApiStoreServer) MyAllStore(ctx context.Context, in *api.MyAllStoreIdReq) (*api.MyAllStoreIdRes, error) {
	l := apistorelogic.NewMyAllStoreLogic(ctx, s.svcCtx)
	return l.MyAllStore(in)
}

func (s *ApiStoreServer) StoresChat(ctx context.Context, in *api.StoreChatReq) (*api.StoreChatRes, error) {
	l := apistorelogic.NewStoresChatLogic(ctx, s.svcCtx)
	return l.StoresChat(in)
}

func (s *ApiStoreServer) InitChatLog(ctx context.Context, in *api.InitChatLogReq) (*api.InitChatLogRes, error) {
	l := apistorelogic.NewInitChatLogLogic(ctx, s.svcCtx)
	return l.InitChatLog(in)
}
