// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: store.proto

package server

import (
	"context"

	"store/app/rpc/store/internal/logic/storebecome"
	"store/app/rpc/store/internal/svc"
	"store/app/rpc/store/pb/store"
)

type StoreBecomeServer struct {
	svcCtx *svc.ServiceContext
	store.UnimplementedStoreBecomeServer
}

func NewStoreBecomeServer(svcCtx *svc.ServiceContext) *StoreBecomeServer {
	return &StoreBecomeServer{
		svcCtx: svcCtx,
	}
}

func (s *StoreBecomeServer) CreateStore(ctx context.Context, in *store.CreateStoreReq) (*store.CreateStoreRes, error) {
	l := storebecomelogic.NewCreateStoreLogic(ctx, s.svcCtx)
	return l.CreateStore(in)
}

func (s *StoreBecomeServer) JoinStoreMember(ctx context.Context, in *store.JoinStoreMemberReq) (*store.JoinStoreMemberRes, error) {
	l := storebecomelogic.NewJoinStoreMemberLogic(ctx, s.svcCtx)
	return l.JoinStoreMember(in)
}

func (s *StoreBecomeServer) SaveChatMessage(ctx context.Context, in *store.SaveChatReq) (*store.Response, error) {
	l := storebecomelogic.NewSaveChatMessageLogic(ctx, s.svcCtx)
	return l.SaveChatMessage(in)
}
