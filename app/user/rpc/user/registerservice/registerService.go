// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package registerservice

import (
	"context"

	"store/app/user/rpc/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RegisterReq = user.RegisterReq
	RegisterRes = user.RegisterRes
	Response    = user.Response

	RegisterService interface {
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error)
	}

	defaultRegisterService struct {
		cli zrpc.Client
	}
)

func NewRegisterService(cli zrpc.Client) RegisterService {
	return &defaultRegisterService{
		cli: cli,
	}
}

func (m *defaultRegisterService) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterRes, error) {
	client := user.NewRegisterServiceClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}
