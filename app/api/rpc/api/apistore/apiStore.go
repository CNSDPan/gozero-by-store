// Code generated by goctl. DO NOT EDIT.
// Source: api.proto

package apistore

import (
	"context"

	"store/app/api/rpc/pb/api"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthReq            = api.AuthReq
	AuthRes            = api.AuthRes
	InitChatLogReq     = api.InitChatLogReq
	InitChatLogRes     = api.InitChatLogRes
	MemberUsersItemReq = api.MemberUsersItemReq
	MemberUsersItemRes = api.MemberUsersItemRes
	MyAllStoreIdReq    = api.MyAllStoreIdReq
	MyAllStoreIdRes    = api.MyAllStoreIdRes
	Response           = api.Response
	StoreChatItem      = api.StoreChatItem
	StoreChatReq       = api.StoreChatReq
	StoreChatRes       = api.StoreChatRes
	StoreInfoReq       = api.StoreInfoReq
	StoreInfoRes       = api.StoreInfoRes
	StoreItem          = api.StoreItem
	StoreListReq       = api.StoreListReq
	StoreListRes       = api.StoreListRes
	StoresChatMap      = api.StoresChatMap
	StoresMap          = api.StoresMap
	UserInfoReq        = api.UserInfoReq
	UserInfoRes        = api.UserInfoRes
	UserItem           = api.UserItem
	UserLoginReq       = api.UserLoginReq
	UserLoginRes       = api.UserLoginRes
	UsersMap           = api.UsersMap

	ApiStore interface {
		List(ctx context.Context, in *StoreListReq, opts ...grpc.CallOption) (*StoreListRes, error)
		Info(ctx context.Context, in *StoreInfoReq, opts ...grpc.CallOption) (*StoreInfoRes, error)
		MemberUserList(ctx context.Context, in *MemberUsersItemReq, opts ...grpc.CallOption) (*MemberUsersItemRes, error)
		MyAllStore(ctx context.Context, in *MyAllStoreIdReq, opts ...grpc.CallOption) (*MyAllStoreIdRes, error)
		StoresChat(ctx context.Context, in *StoreChatReq, opts ...grpc.CallOption) (*StoreChatRes, error)
		InitChatLog(ctx context.Context, in *InitChatLogReq, opts ...grpc.CallOption) (*InitChatLogRes, error)
	}

	defaultApiStore struct {
		cli zrpc.Client
	}
)

func NewApiStore(cli zrpc.Client) ApiStore {
	return &defaultApiStore{
		cli: cli,
	}
}

func (m *defaultApiStore) List(ctx context.Context, in *StoreListReq, opts ...grpc.CallOption) (*StoreListRes, error) {
	client := api.NewApiStoreClient(m.cli.Conn())
	return client.List(ctx, in, opts...)
}

func (m *defaultApiStore) Info(ctx context.Context, in *StoreInfoReq, opts ...grpc.CallOption) (*StoreInfoRes, error) {
	client := api.NewApiStoreClient(m.cli.Conn())
	return client.Info(ctx, in, opts...)
}

func (m *defaultApiStore) MemberUserList(ctx context.Context, in *MemberUsersItemReq, opts ...grpc.CallOption) (*MemberUsersItemRes, error) {
	client := api.NewApiStoreClient(m.cli.Conn())
	return client.MemberUserList(ctx, in, opts...)
}

func (m *defaultApiStore) MyAllStore(ctx context.Context, in *MyAllStoreIdReq, opts ...grpc.CallOption) (*MyAllStoreIdRes, error) {
	client := api.NewApiStoreClient(m.cli.Conn())
	return client.MyAllStore(ctx, in, opts...)
}

func (m *defaultApiStore) StoresChat(ctx context.Context, in *StoreChatReq, opts ...grpc.CallOption) (*StoreChatRes, error) {
	client := api.NewApiStoreClient(m.cli.Conn())
	return client.StoresChat(ctx, in, opts...)
}

func (m *defaultApiStore) InitChatLog(ctx context.Context, in *InitChatLogReq, opts ...grpc.CallOption) (*InitChatLogRes, error) {
	client := api.NewApiStoreClient(m.cli.Conn())
	return client.InitChatLog(ctx, in, opts...)
}
